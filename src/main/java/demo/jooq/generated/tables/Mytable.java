/**
 * This class is generated by jOOQ
 */
package demo.jooq.generated.tables;


import demo.jooq.generated.Public;
import demo.jooq.generated.tables.records.MytableRecord;

import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mytable extends TableImpl<MytableRecord> {

    private static final long serialVersionUID = -1779850966;

    /**
     * The reference instance of <code>public.mytable</code>
     */
    public static final Mytable MYTABLE = new Mytable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MytableRecord> getRecordType() {
        return MytableRecord.class;
    }

    /**
     * The column <code>public.mytable.id</code>.
     */
    public final TableField<MytableRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("uuid_generate_v4()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.mytable.created_timestamp</code>.
     */
    public final TableField<MytableRecord, Timestamp> CREATED_TIMESTAMP = createField("created_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>public.mytable.title</code>.
     */
    public final TableField<MytableRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mytable.description</code>.
     */
    public final TableField<MytableRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mytable.count</code>.
     */
    public final TableField<MytableRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mytable.ext</code>.
     */
    public final TableField<MytableRecord, Object> EXT = createField("ext", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

    /**
     * Create a <code>public.mytable</code> table reference
     */
    public Mytable() {
        this("mytable", null);
    }

    /**
     * Create an aliased <code>public.mytable</code> table reference
     */
    public Mytable(String alias) {
        this(alias, MYTABLE);
    }

    private Mytable(String alias, Table<MytableRecord> aliased) {
        this(alias, aliased, null);
    }

    private Mytable(String alias, Table<MytableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mytable as(String alias) {
        return new Mytable(alias, this);
    }

    /**
     * Rename this table
     */
    public Mytable rename(String name) {
        return new Mytable(name, null);
    }
}
